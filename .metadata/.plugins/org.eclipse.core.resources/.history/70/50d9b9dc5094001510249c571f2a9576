package fr.dawan.projet1.ws;

import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Payload;
import javax.validation.Validation;
import javax.validation.Validator;
import javax.validation.ValidatorFactory;

import org.junit.Before;
import org.junit.Test;

import fr.dawan.projet1.ws.beans.CompagnieAerienne;
import junit.framework.TestCase;

public class CompagnieTest extends TestCase{
	
	private ValidatorFactory vf;
	private Validator validator;
	
	private CompagnieAerienne compagnieA;
	
	@Before
	public void setUpBeforeClass(){
		
		
	}

	@Test
	public void test() {
		System.out.println("launch test unit");
		vf = Validation.buildDefaultValidatorFactory();
		validator = vf.getValidator();
		
		compagnieA = new CompagnieAerienne(50,"aaAa");
		//indentifyViolations(compagnieA,0);
		Set<ConstraintViolation<CompagnieAerienne>> violations = validator.validate(compagnieA);
		
		if(violations.isEmpty())
			System.out.println("Aucune Violation");
		else{
			for (ConstraintViolation<CompagnieAerienne> constraintViolation : violations) {
				Set<Class<? extends Payload>> payload = constraintViolation.getConstraintDescriptor().getPayload();
				if payload.in
				
			}
			violations.forEach(v -> System.out.println(v.getMessage()));
		}
		assertEquals(violations.size(), 0);
		
		
	}

	private void indentifyViolations(CompagnieAerienne compagnieA2, int i) {

		
	}

}

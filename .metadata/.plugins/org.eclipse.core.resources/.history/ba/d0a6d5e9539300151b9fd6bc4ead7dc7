package fr.dawan.project.controlers;

import java.io.IOException;
import java.util.Properties;
import java.util.concurrent.Callable;
import java.util.concurrent.ScheduledExecutorService;

import javax.annotation.Resource;
import javax.batch.operations.JobOperator;
import javax.batch.runtime.BatchRuntime;
import javax.batch.runtime.BatchStatus;
import javax.batch.runtime.JobExecution;
import javax.enterprise.concurrent.ManagedScheduledExecutorService;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Servlet implementation class JSONServlet
 */
@SuppressWarnings("serial")
@WebServlet("/BatchController")
public class BatchController extends HttpServlet {
	
	@Resource(name = "concurrent/__defaultManagedScheduledExecutorService")
	private ManagedScheduledExecutorService scheduledExecutorService;

	@Override
	protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		
		//Ex1 : lancement d un batch depuis le controler
//		JobOperator jobOperator = BatchRuntime.getJobOperator();
//		long executionId = jobOperator.start("myJob", new Properties());
//		JobExecution jobExec = jobOperator.getJobExecution(executionId);
//		BatchStatus batchStatus = jobExec.getBatchStatus();
//		resp.getWriter().append("batch status " + batchStatus);
		
		//Ex 2 : lancement d un batch depuis un EJB Timer
		//@See fr.dawan.project.ejb.timer.BatchScheduleEjb
		
		//Ex 3 lancement avec un executor
		scheduledExecutorService.schedule(new BatchCallable(), );
		
	}
	
	private class BatchCallable implements Callable<BatchStatus>{

		@Override
		public Void call() throws Exception {
			JobOperator jobOperator = BatchRuntime.getJobOperator();
			long executionId = jobOperator.start("myJob", new Properties());
			JobExecution jobExec = jobOperator.getJobExecution(executionId);
			BatchStatus batchStatus = jobExec.getBatchStatus();
			return batchStatus;
			
		}
		
	}
	

}

package fr.dawan.projet1.dao;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;

import fr.dawan.projet1.ws.beans.Voyage;

public class VoyageDao {

	private static List<Voyage> lv;
	
	static{
		lv	= Collections.synchronizedList(new ArrayList<>());
		lv.add(new Voyage(1L, "Paris", "Tokyo", new Date()));
		lv.add(new Voyage(2L, "Chamb√©ry", "La ravoire", new Date()));
	}

	public static List<Voyage> lister() {
		Collections.sort(lv, (x,y) -> (int) (x.getId() - y.getId()));
		return lv;
	}
	
	public static Voyage rechercher(long id) {
//		int ind = lv.indexOf(new Voyage(id,null,null,null));
//		return (ind==-1) ? null : lv.get(ind);
		Voyage voyage = lv.stream().filter( x -> x.getId()==id).findFirst().get();
		return voyage;

	}
	
	public static boolean supprimer(long id) {
		int ind = lv.indexOf(new Voyage(id,null,null,null));
		if(ind==-1)
			return false;
		lv.remove(ind);
		return true;
	}
	
	public static boolean modifier(Voyage v) {
		if(!lv.contains(v))
			return false;
		lv.remove(v);
		return lv.add(v);
	}
	

	public static Voyage ajouter(Voyage v) {
		v.setId(lv.size()+1);
		lv.add(v);
		return v;
	}

}

package fr.dawan.project.ejb;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Semaphore;
import java.util.concurrent.TimeUnit;

import javax.annotation.Resource;
import javax.ejb.Stateless;
import javax.enterprise.concurrent.ManagedExecutorService;
/**
 * Scenario : un ejb qui cherche dans plusieurs fichiers une chaine/
 * Récup le n° de la ligne, son contenu et le nom du fichier
 * @author Admin Stagiaire
 *
 */
@Stateless
public class SearchEjb {
	
	@Resource(name="concurrent/__defaultManagedExecutorService")
	private ManagedExecutorService executorService;
	
	public List<ResultatRecherche> search(String search) {
		List<ResultatRecherche> results = Collections.synchronizedList(new ArrayList<ResultatRecherche>());
		
		try {
			Semaphore semaphore = new Semaphore(0);
			File f = new File("C:/Formation/tmp");
			File[] files = f.listFiles();
			for (File file : files) {
				executorService.execute(new TacheRecherche(file, search, semaphore, results));
			}
			//equivalent à si on avait fait 
			////List<Future<Void>> invokeAll = executorService.invokeAll(new ArrayList<Callable<Void>>()); et des get sur la liste
			try{
				semaphore.tryAcquire(files.length, 10, TimeUnit.SECONDS);
				
			}catch(InterruptedException e){
				e.printStackTrace();
			}
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return results;
	}

	class TacheRecherche implements Runnable {

		private File file;
		private String search;
		private Semaphore semaphore;
		private List<ResultatRecherche> results;

		public TacheRecherche(File file, String search, Semaphore semaphore, List<ResultatRecherche> results) {
			super();
			this.file = file;
			this.search = search;
			this.semaphore = semaphore;
			this.results = results;
		}

		public void run() {
			try(BufferedReader br = new BufferedReader(new FileReader(file))){
				int count = 0;
				String filename = file.getAbsolutePath();
				String line = null;
				int lineNumber = 1;
				while((line=br.readLine())!=null){
					if(count<=3 && line.contains(search)){
						results.add(new ResultatRecherche(lineNumber, filename, line));
						count++;
					}
					lineNumber++;
				}
			}  catch (IOException e) {
				e.printStackTrace();
			}
			semaphore.release();
		}
	}

}
